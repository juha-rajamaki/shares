<?php
/*
	WatchDog program for timing your buy's and sell's
	Written by borre 2015
	Open Source - please free to use and contribute. :)
*/

	ini_set('display_errors', 0);
	error_reporting(E_NOTICE);

	ini_alter('date.timezone','Europe/Helsinki');

	$time                            = date('d.m.Y H:i:s');
        $showtext 			= '';
	$last_change 			= '';
	$last_change_show		= array();
        $collector                      = array();
	$engine				= '';

        require_once('doge.ascii');
        print_r($doge);
        require_once('watchdog.conf.example');
        include_once('watchdog.conf');
	require_once('watchdog.list.example');
        include_once('watchdog.list');

	sleep(1);

for ($x = 0; $x <= 10000; $x++) {

        echo "Watch Dog run started @ $time \n\n";
	echo "STRATEGY    START   LOW     HIGH    AVG     NOW      TODAY     VOL   INSTRUMENT\n";

	foreach($watchlist as $item):

		$share = $item['SHARE'];
                require("./"."$share");

        	$curl = curl_init();

        	curl_setopt($curl, CURLOPT_URL, $url);
        	curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        	curl_setopt($curl, CURLOPT_HEADER, false);

        	$data = curl_exec($curl);

                preg_match_all('#<tr[^>]*>(.*?)</tr>#s', $data, $matches);

                if($engine == 1) {

                        preg_match_all('/([0-9]+\.[0-9]+)/', $matches[0][13], $matches);

                        $today_start    = $matches[0][5];
                        $current        = $matches[0][0];
                        $today_lowest   = ''; // $matches[0][8]; // Notice ?
                        $today_highest  = ''; // $matches[0][7]; // Notice ?

                } else {

                        preg_match_all('/([0-9]+\.[0-9]+)/', $matches[0][14], $matches);

                        $today_start    = $matches[0][7];
                        $current        = $matches[0][0];
                        $today_lowest   = $matches[0][9];
                        $today_highest  = $matches[0][8];
                }

		// Test if the Exchange is open
		if(count($matches[0]) <= 4) { die("\nExiting: Nordic Growth Market open times : http://www.ngm.se/handel-2/?lang=en\n\n"); exit; }

                $today_average  			= round(($today_lowest+$today_highest)/2, 2);
                if($today_lowest) { $volatility     	= round(($today_highest/$today_lowest)*100-100, 2); } else { $volatility = 0; }
		$today_direction			= round(($current/$today_start)*100-100, 2);

                $space_start            = str_repeat(' ', (7-strlen($today_start)));
		$space_vol 		= str_repeat(' ', (6-strlen($volatility)));
                $space_high 		= str_repeat(' ', (7-strlen($today_highest)));
                $space_low 		= str_repeat(' ', (7-strlen($today_lowest)));
		$space_cur      	= str_repeat(' ', (6-strlen($current)));
                $space_dir              = str_repeat(' ', (6-strlen($today_direction)));
                $space_avg              = str_repeat(' ', (8-strlen($today_average)));
                $space_title       	= str_repeat(' ', (20-strlen($title)));

		// status
		$status = "";		
		if($current < $item['SELL'] && $current > $item['BUY']) { $status = "".chr(27) . "[40m" ."HOLD       ". chr(27) . "[0m".""; }
                elseif($current < $item['ALL_IN']) { $status = "".chr(27) . "[42m" ."ALL IN     ". chr(27) . "[0m".""; }
                elseif($current < $item['STRONG_BUY']) { $status = "".chr(27) . "[42m" ."STRONG BUY ". chr(27) . "[0m".""; }
                elseif($current > $item['STRONG_SELL']) { $status = "".chr(27) . "[41m" ."STRONG SELL". chr(27) . "[0m".""; }
		elseif($current >= $item['SELL']) { $status = "".chr(27) . "[45m" ."SELL       ". chr(27) . "[0m".""; }
                elseif($current <= $item['BUY']) { $status = "".chr(27) . "[46m" ."BUY        ". chr(27) . "[0m".""; }
		else { die('error: status'); }

		// now (color)
	        if($current == $today_start) { $now_color = "[40m";	
			} elseif ($current > $today_start) {
        	        	if($current == $today_highest) { $now_color = "[42m"; } else { $now_color = "[44m"; }
        		} elseif ($current < $today_start) {
        		        if($current == $today_lowest) { $now_color = "[41m"; } else { $now_color = "[45m"; }
        	} else { die('error:current'); }

                // make last change
		if(isset($last_change["".$share.""])) {

                	if($last_change["".$share.""] != $current) {
                                $last_change_show = round($current / $last_change["".$share.""]  * 100 - 100, 2);

				if($current > $last_change["".$share.""]) 
				{ // Going Up colorize
				$last_change_show = "".chr(27)."[1;32m UP +".$last_change_show."%". chr(27) . "[0m"."";
                                $collector["".$share.""]['price_direction'][] = 'U';

				} else { // Going Down colorize
				$last_change_show = "".chr(27)."[1;33m DOWN: ".$last_change_show."%". chr(27) . "[0m"."";
				$collector["".$share.""]['price_direction'][] = 'D';

				}

			$last_change["".$share.""] = $current;
			$collector["".$share.""]['pricechange'][] = $current;

                	}

		} else { $last_change["".$share.""] = $current; }

                // make current direction

                if($today_direction > 0) { $today_direction = "".chr(27) . "[1;32m" ."$today_direction%". chr(27) . "[0m".""; }
                elseif($today_direction < 0) { $today_direction = "".chr(27) . "[1;33m" ."$today_direction%". chr(27) . "[0m".""; }
                else { $today_direction = "$today_direction%";  }

		// print out

		$printout = '';
		$printout .= "$status $today_start$space_start $today_lowest$space_low $today_highest$space_high $today_average$space_avg";
		$printout .= "".chr(27)."$now_color"."$current".chr(27)."[0m"."$space_cur ";
		$printout .= "$space_dir$today_direction ";
		$printout .= "$space_vol$volatility%   ";
		$printout .= "$title$space_title $url";

		$collector_printout = '';
		if(isset($collector["".$share.""])) {
			foreach($collector["".$share.""]['price_direction'] as $value) {
//				$collector_printout .= $value;
				if($value == 'U') { $collector_printout .= "".chr(27)."[1;32m#". chr(27) . "[0m".""; }
                                if($value == 'D') { $collector_printout .= "".chr(27)."[1;33m#". chr(27) . "[0m".""; }
			}
		}

		$printout .= "   $collector_printout";

/*
		$collector_printout = str_replace('UUUU', "".chr(27)."[1;32m4". chr(27) . "[0m"."", $collector_printout);
		$collector_printout = str_replace('UUU', "".chr(27)."[1;32m3". chr(27) . "[0m"."", $collector_printout);
		$collector_printout = str_replace('UU', "".chr(27)."[1;32m2". chr(27) . "[0m"."", $collector_printout);
		$collector_printout = str_replace('U', "".chr(27)."[1;32m1". chr(27) . "[0m"."", $collector_printout);

                $collector_printout = str_replace('DDDD', "".chr(27)."[1;33m4". chr(27) . "[0m"."", $collector_printout);
                $collector_printout = str_replace('DDD', "".chr(27)."[1;33m3". chr(27) . "[0m"."", $collector_printout);
                $collector_printout = str_replace('DD', "".chr(27)."[1;33m2". chr(27) . "[0m"."", $collector_printout);
		$collector_printout = str_replace('D', "".chr(27)."[1;33m1". chr(27) . "[0m"."", $collector_printout);

		$printout .= "$collector_printout";
*/

		if($last_change_show) { $printout .= " $last_change_show"; }
		$printout .= "\n";
		echo "$printout";

		$engine = '';			// reset instrument engine
		$last_change_show = '';		// reset last change
		$now_color = '';

	endforeach;

	// timeout
	echo "\n".$wait."s [";
	for ($x = 1; $x <= $wait; $x++) {
        	sleep (1);
        	echo ".";
	}

        system('clear');

} //for
