<?php
/*	WatchDog program for timing your buy's and sell's	*/

	ini_alter('date.timezone','Europe/Helsinki');

	$now                            = date('d.m.Y H:i:s');
        $showtext 			= '';
	$last_change 			= '';
	$last_change_show		= array();

	require_once('doge.ascii');
	require_once('watchdog.conf.example');
        include_once('watchdog.conf');
	sleep(1);

	print_r($doge);

for ($x = 0; $x <= 10000; $x++) {

        echo "Watch Dog run started @ ".$now."\n\n";
	echo "STRATEGY    LOW     HIGH    AVG     NOW      TODAY     VOL\n";

	foreach($watchlist as $item):

		$share = $item['SHARE'];
                require("./"."$share");

        	$curl = curl_init();

        	curl_setopt($curl, CURLOPT_URL, $url);
        	curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        	curl_setopt($curl, CURLOPT_HEADER, false);

        	$data = curl_exec($curl);

                preg_match_all('#<tr[^>]*>(.*?)</tr>#s', $data, $matches);

                if($engine == 1) {

                        preg_match_all('/([0-9]+\.[0-9]+)/', $matches[0][13], $matches);

                        $today_start    = $matches[0][5];
                        $current        = $matches[0][0];
                        $today_lowest   = $matches[0][7];
                        $today_highest  = $matches[0][8];

                } else {

                        preg_match_all('/([0-9]+\.[0-9]+)/', $matches[0][14], $matches);

                        $today_start    = $matches[0][7];
                        $current        = $matches[0][0];
                        $today_lowest   = $matches[0][9];
                        $today_highest  = $matches[0][8];
                }

                $today_average  	= round(($today_lowest+$today_highest)/2, 2);
                $volatility     	= round(($today_highest/$today_lowest)*100-100, 2);
		$today_direction	= round(($current/$today_start)*100-100, 2);

		$space_vol 		= str_repeat(' ', (6-strlen($volatility)));
                $space_high 		= str_repeat(' ', (7-strlen($today_highest)));
                $space_low 		= str_repeat(' ', (7-strlen($today_lowest)));
		$space_cur      	= str_repeat(' ', (6-strlen($current)));
                $space_dir              = str_repeat(' ', (6-strlen($today_direction)));
                $space_avg              = str_repeat(' ', (8-strlen($today_average)));

		// status

		$status = "";		
		if($current < $item['SELL'] && $current > $item['BUY']) { $status = "".chr(27) . "[40m" ."HOLD       ". chr(27) . "[0m".""; }
                elseif($current < $item['ALL_IN']) { $status = "".chr(27) . "[42m" ."ALL IN     ". chr(27) . "[0m".""; }
                elseif($current < $item['STRONG_BUY']) { $status = "".chr(27) . "[42m" ."STRONG BUY ". chr(27) . "[0m".""; }
                elseif($current > $item['STRONG_SELL']) { $status = "".chr(27) . "[41m" ."STRONG SELL". chr(27) . "[0m".""; }
		elseif($current >= $item['SELL']) { $status = "".chr(27) . "[43m" ."SELL       ". chr(27) . "[0m".""; }
                elseif($current <= $item['BUY']) { $status = "".chr(27) . "[46m" ."BUY        ". chr(27) . "[0m".""; }
		else { die('error: status'); }

		// now

	        if($current == $today_start) { $now = "[40m";
        	} elseif ($current > $today_start) {
                	if($current == $today_highest) { $now_color = "[42m"; } else { $now_color = "[44m"; }
        	} elseif ($current < $today_start) {
        	        if($current == $today_lowest) { $now_color = "[41m"; } else { $now_color = "[43m"; }
        	} else { die('error:current'); }

/*		FIX IT

                // make last change
		if(isset($last_change["".$share.""])) {

                	if($last_change["".$share.""] != $current) {

				if($current > $last_changed["".$share.""]) 
				{ // Going Up colorize

                                	$last_change_show = round(100 - $last_change["".$share.""] / $current * 100, 2);
					$last_change_show = "".chr(27)."[1;32m UP +".$last_change_show."";

				} else { // Going Down colorize

                                	$last_change_show = round(100 - $current / $last_change["".$share.""] * 100, 2);
					$last_change_show = "".chr(27)."[1;33m DOWN: ".$last_change_show."";

				}

                	}

		} else { $last_change["".$share.""] = $current; }
*/

                // make current direction

                if($today_direction > 0) { $today_direction = "".chr(27) . "[1;32m" ."$today_direction%". chr(27) . "[0m".""; }
                elseif($today_direction < 0) { $today_direction = "".chr(27) . "[1;31m" ."$today_direction%". chr(27) . "[0m".""; }
                else { $today_direction = "$today_direction%";  }

		// print out

		$printout = '';
		$printout .= "$status $today_lowest$space_low $today_highest$space_high $today_average$space_avg";
		$printout .= "".chr(27)."$now_color".$current."". chr(27) . "[0m"."$space_cur ";
		$printout .= "$space_dir$today_direction ";
		$printout .= "$space_vol$volatility%   ";
		$printout .= "$title";
		if($last_change_show) { $printout .= " $last_change_show%"; }
		$printout .= "\n";
		echo $printout;

		$engine = '';			// reset instrument engine
		$last_change_show = '';		// reset last change

	endforeach;

	// timeout
	echo "\n[";
	for ($x = 1; $x <= $wait; $x++) {
        	sleep (1);
        	echo ".";
	}
	echo "]";

        system('clear');

} //for
